generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Team {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  date        String
  leaderName  String
  leaderPhone String
  population  Int
  coupon      String
  isApproved  Boolean  @default(false)
  isLeave     Boolean  @default(false)
}

model Order {
  id                    Int            @id @default(autoincrement())
  createdAt             DateTime       @default(now())
  updatedAt             DateTime       @updatedAt
  date                  String
  senderName            String
  senderPhone           String
  sameAsSender          Boolean        @default(false)
  receiverName          String
  receiverPhone         String
  receiverAddress       String
  receiverAddressDetail String
  products              OrderProduct[]
  memo                  String
}

model OrderProduct {
  orderId   Int
  Order     Order   @relation(fields: [orderId], references: [id])
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int

  @@id([orderId, productId])
  @@index([orderId])
  @@index([productId])
}

model Product {
  id           Int              @id @default(autoincrement())
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  name         String
  categoryId   Int?
  category     ProductCategory? @relation(fields: [categoryId], references: [id])
  price        Int
  isSale       Boolean          @default(false)
  salePrice    Int
  remain       Int
  enabled      Boolean          @default(false)
  isDeleted    Boolean          @default(false)
  images       Image[]
  OrderProduct OrderProduct[]

  @@index([categoryId])
}

model ProductCategory {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  name        String    @unique
  enabled     Boolean   @default(false)
  description String    @default("")
  products    Product[]
}

model Image {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  src       String
  name      String
  mimeType  String
  width     Int
  height    Int
  role      String // product_main | product_detail | product_thumb

  productId Int?
  Product   Product? @relation(fields: [productId], references: [id])

  @@index([productId])
}
